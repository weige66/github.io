import{_ as n,c as a,e as l,o as e}from"./app-0O2wLXp2.js";const o={};function p(t,s){return e(),a("div",null,s[0]||(s[0]=[l(`<div class="language-js line-numbers-mode" data-ext="js" data-title="js"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> getOnlyData</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">data</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">field</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">      let</span><span style="color:#E06C75;"> result</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> []</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> suggestionMap</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> {}</span></span>
<span class="line"><span style="color:#C678DD;">      const</span><span style="color:#E5C07B;"> length</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">length</span></span>
<span class="line"><span style="color:#C678DD;">      if</span><span style="color:#ABB2BF;"> (</span><span style="color:#E06C75;">length</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#C678DD;">      for</span><span style="color:#ABB2BF;"> (</span><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> i</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 0</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;"> &lt;</span><span style="color:#E06C75;"> length</span><span style="color:#ABB2BF;">; </span><span style="color:#E06C75;">i</span><span style="color:#56B6C2;">++</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> currentItem</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> data</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">i</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#C678DD;">        let</span><span style="color:#E06C75;"> suggestion</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> currentItem</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">field</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#C678DD;">        if</span><span style="color:#ABB2BF;"> (</span><span style="color:#56B6C2;">!</span><span style="color:#E06C75;">suggestionMap</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">suggestion</span><span style="color:#ABB2BF;">]) {</span></span>
<span class="line"><span style="color:#E06C75;">          suggestionMap</span><span style="color:#ABB2BF;">[</span><span style="color:#E06C75;">suggestion</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#D19A66;"> true</span></span>
<span class="line"><span style="color:#E5C07B;">          result</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">currentItem</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">        }</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#E06C75;"> result</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> data</span><span style="color:#56B6C2;"> =</span><span style="color:#ABB2BF;"> [{</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;张三&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;1&#39;</span><span style="color:#ABB2BF;">},{</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;张三&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;2&#39;</span><span style="color:#ABB2BF;">},{</span><span style="color:#E06C75;">name</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;李四&#39;</span><span style="color:#ABB2BF;">,</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;3&#39;</span><span style="color:#ABB2BF;">}]</span></span>
<span class="line"><span style="color:#61AFEF;">getOnlyData</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;name&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">/* [</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        &quot;name&quot;: &quot;张三&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        &quot;value&quot;: &quot;1&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    },</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        &quot;name&quot;: &quot;李四&quot;,</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        &quot;value&quot;: &quot;3&quot;</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">]*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)]))}const r=n(o,[["render",p],["__file","index.html.vue"]]),i=JSON.parse(`{"path":"/article/1dpe9xxy/","title":"数组对象去重算法","lang":"zh-CN","frontmatter":{"title":"数组对象去重算法","createTime":"2024/12/29 00:00:05","permalink":"/article/1dpe9xxy/","tags":["算法"],"head":[["meta",{"property":"og:url","content":"https://weige66.github.io/article/1dpe9xxy/"}],["meta",{"property":"og:site_name","content":"zhengWei's Blog"}],["meta",{"property":"og:title","content":"数组对象去重算法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-28T16:17:08.000Z"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:modified_time","content":"2024-12-28T16:17:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组对象去重算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-28T16:17:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"weiGe66\\",\\"url\\":\\"https://github.com/weiGe66\\",\\"email\\":\\"2361929296@qq.com\\"}]}"]]},"headers":[],"readingTime":{"minutes":0.31,"words":93},"git":{"updatedTime":1735402628000,"contributors":[{"name":"zhengwei","username":"zhengwei","email":"wangzhengwei@nstc.com.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/zhengwei?v=4","url":"https://github.com/zhengwei"}]},"filePathRelative":"blog/算法/数组对象去重算法.md","categoryList":[{"id":"126ac9","sort":10005,"name":"blog"},{"id":"44f0ef","sort":10007,"name":"算法"}],"bulletin":false}`);export{r as comp,i as data};
