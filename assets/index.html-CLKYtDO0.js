import{_ as n,c as a,e as l,o as p}from"./app-0O2wLXp2.js";const o={};function e(t,s){return p(),a("div",null,s[0]||(s[0]=[l(`<div class="language-javascript line-numbers-mode" data-ext="javascript" data-title="javascript"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> axios</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;axios&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> qs</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &quot;qs&quot;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//处理参数</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> router</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;../router&#39;</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//引入路由</span></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">Loading</span><span style="color:#ABB2BF;"> , </span><span style="color:#E06C75;">Message</span><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">from</span><span style="color:#98C379;"> &#39;element-ui&#39;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">let</span><span style="color:#E06C75;"> loading</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> null</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//开始加载动画</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> openLoading</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E06C75;">  loading</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> Loading</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">service</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">    lock</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    text</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;拼命加载中...&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">    background</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;rgba(0,0,0,.7)&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//关闭加载动画</span></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> closeLoading</span><span style="color:#ABB2BF;">(){</span></span>
<span class="line"><span style="color:#E5C07B;">  loading</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">close</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//添加请求拦截器</span></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">interceptors</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">request</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  config</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">    //加载动画</span></span>
<span class="line"><span style="color:#61AFEF;">    openLoading</span><span style="color:#ABB2BF;">()</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sessionId</span><span style="color:#ABB2BF;">){ </span><span style="color:#7F848E;font-style:italic;">//如果我的sessionId存在(sessionId其实就是token)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">      // 设置统一的请求header</span></span>
<span class="line"><span style="color:#E5C07B;">      config</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">headers</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">Authorization</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> localStorage</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">sessionId</span><span style="color:#7F848E;font-style:italic;"> //授权（每次请求把sessionId带给后台）</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> config</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  error</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">reject</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">error</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//添加响应拦截器</span></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">interceptors</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">response</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">use</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  response</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">　　//逻辑处理</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">response</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">data</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">errorCode</span><span style="color:#56B6C2;"> ==</span><span style="color:#56B6C2;"> -</span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">){ </span><span style="color:#7F848E;font-style:italic;">//后端反回的状态值，本应该errorCode是status</span></span>
<span class="line"><span style="color:#61AFEF;">      Message</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;warning&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        duration</span><span style="color:#ABB2BF;">:</span><span style="color:#D19A66;">1500</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        showClose</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        message</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;当前登录已失效，请从新登录！&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#E5C07B;">      router</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">push</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;/logon&quot;</span><span style="color:#ABB2BF;">)</span><span style="color:#7F848E;font-style:italic;">//让用户从新回到登录页面</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E06C75;"> response</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#E06C75;font-style:italic;">  error</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">　　closeLoading</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">//请求超时清除加载动画</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">error</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">defaults</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">baseURL</span><span style="color:#56B6C2;"> =</span><span style="color:#98C379;"> &quot;http://10.26.41.181:8081/nei&quot;</span><span style="color:#ABB2BF;">;    </span><span style="color:#7F848E;font-style:italic;">// 开发</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">defaults</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">headers</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">post</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;Content-Type&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;application/json&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">defaults</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">headers</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">post</span><span style="color:#ABB2BF;">[</span><span style="color:#98C379;">&quot;X-Requested-With&quot;</span><span style="color:#ABB2BF;">] </span><span style="color:#56B6C2;">=</span><span style="color:#98C379;"> &quot;XMLHttpRequest&quot;</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#E5C07B;">axios</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">defaults</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">timeout</span><span style="color:#56B6C2;"> =</span><span style="color:#D19A66;"> 6000</span><span style="color:#ABB2BF;">; </span><span style="color:#7F848E;font-style:italic;">//设置请求超时时间</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">function</span><span style="color:#61AFEF;"> checkStatus</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">  return</span><span style="color:#C678DD;"> new</span><span style="color:#E5C07B;"> Promise</span><span style="color:#ABB2BF;">((</span><span style="color:#E06C75;font-style:italic;">resolve</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">reject</span><span style="color:#ABB2BF;">) </span><span style="color:#C678DD;">=&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">    if</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#56B6C2;"> &amp;&amp;</span><span style="color:#ABB2BF;"> (</span><span style="color:#E5C07B;">response</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 200</span><span style="color:#56B6C2;"> ||</span><span style="color:#E5C07B;"> response</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 304</span><span style="color:#56B6C2;"> ||</span><span style="color:#E5C07B;"> response</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">status</span><span style="color:#56B6C2;"> ===</span><span style="color:#D19A66;"> 400</span><span style="color:#ABB2BF;">)){</span></span>
<span class="line"><span style="color:#C678DD;">　　　try</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;">　　　　　closeLoading</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">//关闭加载动画</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">　　     //抛出异常</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#61AFEF;">      resolve</span><span style="color:#ABB2BF;">(</span><span style="color:#E5C07B;">response</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">data</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span><span style="color:#C678DD;">else</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#C678DD;">　　　 try</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#61AFEF;">        closeLoading</span><span style="color:#ABB2BF;">() </span><span style="color:#7F848E;font-style:italic;">//关闭加载动画</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span><span style="color:#C678DD;">catch</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">){</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">        //抛出异常</span></span>
<span class="line"><span style="color:#E5C07B;">        console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">e</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">      }</span></span>
<span class="line"><span style="color:#61AFEF;">      Message</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">        type</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;error&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        showClose</span><span style="color:#ABB2BF;">: </span><span style="color:#D19A66;">true</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">        message</span><span style="color:#ABB2BF;">:</span><span style="color:#98C379;">&#39;网络异常，请检查网络连接是否正常！&#39;</span></span>
<span class="line"><span style="color:#ABB2BF;">      })</span></span>
<span class="line"><span style="color:#ABB2BF;">    }</span></span>
<span class="line"><span style="color:#ABB2BF;">  });</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">export</span><span style="color:#C678DD;"> default</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#61AFEF;">  post</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#61AFEF;"> axios</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">      method</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;post&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      url</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      data</span><span style="color:#ABB2BF;">: </span><span style="color:#E06C75;">params</span></span>
<span class="line"><span style="color:#ABB2BF;">    }).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#61AFEF;"> checkStatus</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#61AFEF;">  get</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">url</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;font-style:italic;">params</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#E06C75;">    params</span><span style="color:#56B6C2;"> =</span><span style="color:#E5C07B;"> qs</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">stringify</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">params</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#C678DD;">    return</span><span style="color:#61AFEF;"> axios</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#E06C75;">      method</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&quot;get&quot;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      url</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#E06C75;">      params</span></span>
<span class="line"><span style="color:#ABB2BF;">    }).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">response</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#C678DD;">      return</span><span style="color:#61AFEF;"> checkStatus</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">response</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">    });</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  使用：在main.js里面引入这个文件，并挂载到vue原型上，这样可以通过this.xxxx去拿到</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">import</span><span style="color:#E06C75;"> axios</span><span style="color:#C678DD;"> from</span><span style="color:#98C379;"> &#39;./api/api.js&#39;</span><span style="color:#7F848E;font-style:italic;">   //引入axios文件夹</span></span>
<span class="line"><span style="color:#E5C07B;">Vue</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">prototype</span><span style="color:#ABB2BF;">.</span><span style="color:#E06C75;">$axios</span><span style="color:#56B6C2;"> =</span><span style="color:#E06C75;"> axios</span><span style="color:#ABB2BF;">;   </span><span style="color:#7F848E;font-style:italic;">//挂载到整个Vue原型上</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//  axios 的使用：在需要请求的页面如下引用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//post请求</span></span>
<span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">post</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;url&#39;</span><span style="color:#ABB2BF;">,{</span><span style="color:#E06C75;">key</span><span style="color:#ABB2BF;">:</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">}).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">   cons</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;后端返回数据&#39;</span><span style="color:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">//get请求</span></span>
<span class="line"><span style="color:#E5C07B;">this</span><span style="color:#ABB2BF;">.</span><span style="color:#E5C07B;">$axios</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;url?key=value&#39;</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">then</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;font-style:italic;">res</span><span style="color:#C678DD;"> =&gt;</span><span style="color:#ABB2BF;">{</span></span>
<span class="line"><span style="color:#E5C07B;">   cons</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">res</span><span style="color:#ABB2BF;">,</span><span style="color:#98C379;">&#39;后端返回数据&#39;</span><span style="color:#ABB2BF;">) </span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)]))}const r=n(o,[["render",e],["__file","index.html.vue"]]),i=JSON.parse(`{"path":"/notes/js/axios%E7%9A%84%E5%B0%81%E8%A3%85/","title":"axios的封装","lang":"zh-CN","frontmatter":{"title":"axios的封装","createTime":"2024/12/28 23:32:38","permalink":"/notes/js/axios的封装/","head":[["meta",{"property":"og:url","content":"https://weige66.github.io/notes/js/axios%E7%9A%84%E5%B0%81%E8%A3%85/"}],["meta",{"property":"og:site_name","content":"zhengWei's Blog"}],["meta",{"property":"og:title","content":"axios的封装"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-28T16:17:08.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-28T16:17:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"axios的封装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-28T16:17:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"weiGe66\\",\\"url\\":\\"https://github.com/weiGe66\\",\\"email\\":\\"2361929296@qq.com\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.59,"words":476},"git":{"updatedTime":1735402628000,"contributors":[{"name":"zhengwei","username":"zhengwei","email":"wangzhengwei@nstc.com.cn","commits":1,"avatar":"https://avatars.githubusercontent.com/zhengwei?v=4","url":"https://github.com/zhengwei"}]},"filePathRelative":"notes/js/axios的封装.md","categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"8c3807","sort":10003,"name":"js"}],"bulletin":false}`);export{r as comp,i as data};
